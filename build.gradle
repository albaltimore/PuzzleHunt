buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"

        classpath 'com.craigburke.gradle:client-dependencies:1.4.1'
    }
}

version ""
group "puzzlehunt"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

apply plugin: 'com.craigburke.client-dependencies'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

def resourcePath = "${System.properties['puzzlehunt.resourcePath'] ?: System.properties['grails.puzzlehunt.resourcePath'] ?: 'bootstrap'}/assets"
def runAssetsPath = 'grails-app/assets/bootstrap'

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    assets "com.bertramlabs.plugins:sass-asset-pipeline:$assetPipelineVersion"

    compile 'org.grails.plugins:cookie-session:4.0.1'

    runtime 'org.apache.derby:derbyclient:10.14.2.0'
    runtime 'mysql:mysql-connector-java:8.0.11'
    runtime 'org.postgresql:postgresql:42.2.3.jre7'
}

task preBootRun(type: Copy) {
    from resourcePath
    into runAssetsPath
}

task preCleanAssets(type: Delete) {
    delete runAssetsPath
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    dependsOn preBootRun
}

assetCompile.dependsOn preCleanAssets
clean.dependsOn 'clientClean', preCleanAssets

assets {
    minifyJs = true
    minifyCss = true
    enableSourceMaps = false

    minifyOptions = [
        languageMode: 'ES6',
        targetLanguage: 'ES5'
    ]

    from resourcePath
}

clientDependencies {
    installDir 'grails-app/assets/packaged'
    fileExtensions 'scss'
    npm {
        jquery('3.2.1') { include 'jquery.js' }
        'font-awesome' ('4.7.0') { include 'scss/**', 'fonts/**' }
    }
}
